The goal of this project
try to convert images to smaller size by brute force - brute mode
try to convert images to smaller size by analyzing the pixels to guess a format - analytic to size
try to convert images to smaller size by analyzing the pixels to keep the smallest size image what makes sense(keep the image color and characteristic) - analytic but keep quality in mind
try to convert images to smaller site by converting them to different color schemes
try to combine all of the above to minimize to outcome image size - auto mode [quality | size]
Far future goal, probably not gonna do it, but just in case
try to implement an own compression algorithm

2022.09.05: Képkonvertálási metódusok keresése pythonban és linux-on. Linuxon convert,mogrify. python PIL
2022.09:07: Talált metódusok tesztelése, különböző convertálók más méretet adnak felfedezése. initial commit
2022.09.08: További própálkozás,tesztelés. Célkitűzés program működésével kapcsolatban.
2022.09.29: CLI argumentumok kezelesmegvalositas, cel megfogalmazas es leiras
2022.10.24: Keposszehasonlitas , kep hisztogram es egyeb adatok elemzese
2022.11.13: Face detection megvalositasa
2022.11.15: Formatum kivalasztas fejlesztese lossless/transparent/dokumentum/facerecognized
2023.01.27: Fajl meret syamitas memoriaban. Kepkulonbseg szamito algoritmus valtas gyorsabbra permormencia miatt.
            kezdeti requirments.txt. Perfomancia javitas.


TODO:
- Performance test again with new code
- new is_same return value map between 0 and 100. done
- structure the code
- run string detection to detemin is document

Far TODO:
- choose compare algorithm with falg
- optional grayscale conversion
- multi thread convesion/calculation support


Comments:
Palette mode setting 1, and 0. What is the difference?
1 looks better, but only in webp, png still trash with -l flag.
in convert get size method palette= line.
